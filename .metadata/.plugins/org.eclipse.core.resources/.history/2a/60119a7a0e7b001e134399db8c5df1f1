grammar Expr;

// parser rules
prog : (decl|expr ';' NEWLINE?)*; 

decl : var '=' num;         

expr: term 					  #termExpr
     | expr ('*' | '/') term  #infixExpr
     | expr ('+' | '-') term  #infixExpr
     ;

term: num 			#numTerm
     | '(' expr ')' #parenTerm
     | var 			#varTerm
     ;
     
num  : INT
     | REAL ;
     
var  : VAR;
     
// lexer rules                    
NEWLINE: [\r\n]+ ;
INT: [+-]?[0-9]+ ;
REAL: [+-]?([0-9]+('.'[0-9]*)?|[0-9]*'.'[0-9]+);
WS: [ \t\r\n]+ -> skip ;
VAR: [a-zA-Z_$][a-zA-Z_$0-9]* ;
