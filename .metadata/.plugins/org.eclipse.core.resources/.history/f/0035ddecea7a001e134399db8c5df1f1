package AST;
import java.io.IOException;
import java.util.List;

import org.antlr.v4.runtime.*;
public class program {

    public static void main(String[] args) throws IOException {
        // Get Lexer
        ExprLexer lexer = new ExprLexer(CharStreams.fromStream(System.in));
        // Get a list of matched tokens
        System.out.print("lexer executed\n");
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        //debugging codes
        List<Token> tokenList = tokens.getTokens();
        for(int i=0;i<tokenList.size();i++) {
        	System.out.printf("%s ",tokenList.get(i).toString());
        }
        
        System.out.print("token generated\n");
        // Pass tokens to parser
        ExprParser parser = new ExprParser(tokens);
        System.out.print("parser executed\n");
        // Make AST from prog and print the tree
        
        ExprParser.ProgContext ctx = parser.prog();
        AstNodes node = (AstNodes)new BuildAstVisitor().visitProg(ctx);
        node.getRoots().forEach(root -> AstCall.Call(root, 0));
        System.out.print("flag\n");
        // Evaluate AST result
//        node.getRoots().forEach(root -> System.out.println(Evaluate.evaluate(node)));
    }
}